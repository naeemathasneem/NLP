{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1kmbEzFcMb3b8E8jIi1mMQ1dpLRnmAbJv","authorship_tag":"ABX9TyO71IR8UozglKlV5CyPZfTf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"NUYOQ7jkjji0"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"abCYUyOPjUEr"},"outputs":[],"source":["df_col = [\"ID\",\"location\",\"target\",\"text\"]\n","df = pd.read_csv(\"/content/drive/MyDrive/softroniics/NLP/twitter_validation.csv\",names=df_col)"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LY5ChCakj9Cq","executionInfo":{"status":"ok","timestamp":1717393711092,"user_tz":-330,"elapsed":39,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"147c0bda-33e7-4942-d448-5353c028018a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     ID   location      target  \\\n","0  3364   Facebook  Irrelevant   \n","1   352     Amazon     Neutral   \n","2  8312  Microsoft    Negative   \n","3  4371      CS-GO    Negative   \n","4  4433     Google     Neutral   \n","\n","                                                text  \n","0  I mentioned on Facebook that I was struggling ...  \n","1  BBC News - Amazon boss Jeff Bezos rejects clai...  \n","2  @Microsoft Why do I pay for WORD when it funct...  \n","3  CSGO matchmaking is so full of closet hacking,...  \n","4  Now the President is slapping Americans in the...  "],"text/html":["\n","  <div id=\"df-196f3682-d26b-49ad-ab8a-08ed785a0916\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>location</th>\n","      <th>target</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3364</td>\n","      <td>Facebook</td>\n","      <td>Irrelevant</td>\n","      <td>I mentioned on Facebook that I was struggling ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>352</td>\n","      <td>Amazon</td>\n","      <td>Neutral</td>\n","      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8312</td>\n","      <td>Microsoft</td>\n","      <td>Negative</td>\n","      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4371</td>\n","      <td>CS-GO</td>\n","      <td>Negative</td>\n","      <td>CSGO matchmaking is so full of closet hacking,...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4433</td>\n","      <td>Google</td>\n","      <td>Neutral</td>\n","      <td>Now the President is slapping Americans in the...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-196f3682-d26b-49ad-ab8a-08ed785a0916')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-196f3682-d26b-49ad-ab8a-08ed785a0916 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-196f3682-d26b-49ad-ab8a-08ed785a0916');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-21a116ac-7b72-4bbc-8ad7-ee37b8c830e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21a116ac-7b72-4bbc-8ad7-ee37b8c830e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-21a116ac-7b72-4bbc-8ad7-ee37b8c830e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3728,\n        \"min\": 6,\n        \"max\": 13197,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          11656,\n          9769,\n          7021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"WorldOfCraft\",\n          \"RedDeadRedemption(RDR)\",\n          \"Xbox(Xseries)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Neutral\",\n          \"Positive\",\n          \"Irrelevant\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 999,\n        \"samples\": [\n          \"Man this some GTA shit lol.\",\n          \"@Xbox @majornelson I\\u2019d love to bring home a new Xbox Series X, but they are all sold out. So the emails are VERY misleading. Just sayin.\",\n          \"This is dope! Puff is such a great kid.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EKjEvOtQmxC-","executionInfo":{"status":"ok","timestamp":1717393711092,"user_tz":-330,"elapsed":37,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"a8d8d399-8031-4b0a-d623-08be9dba1cd2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID          0\n","location    0\n","target      0\n","text        0\n","dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df[\"target\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SIRueSLLmCBK","executionInfo":{"status":"ok","timestamp":1717393711092,"user_tz":-330,"elapsed":36,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"06bbab0b-2eaa-4b11-ff47-1f264e765b4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["target\n","Neutral       285\n","Positive      277\n","Negative      266\n","Irrelevant    172\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.drop(df.index[(df[\"target\"]==\"Irrelevant\")],axis=0,inplace=True)\n","df[\"target\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_np0q3p0oIlK","executionInfo":{"status":"ok","timestamp":1717393711092,"user_tz":-330,"elapsed":35,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"9c65c0c9-140e-49e2-95c6-a5ea2079ac02"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["target\n","Neutral     285\n","Positive    277\n","Negative    266\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":493},"id":"jwo4TEbEpmV1","executionInfo":{"status":"ok","timestamp":1717393711093,"user_tz":-330,"elapsed":35,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"181b3ff3-cb3c-4013-efa8-fa4914593f4d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID           location    target  \\\n","1     352             Amazon   Neutral   \n","2    8312          Microsoft  Negative   \n","3    4371              CS-GO  Negative   \n","4    4433             Google   Neutral   \n","5    6273               FIFA  Negative   \n","..    ...                ...       ...   \n","993   314             Amazon  Negative   \n","994  9701  PlayStation5(PS5)  Positive   \n","997  2652        Borderlands  Positive   \n","998  8069          Microsoft  Positive   \n","999  6960    johnson&johnson   Neutral   \n","\n","                                                  text  \n","1    BBC News - Amazon boss Jeff Bezos rejects clai...  \n","2    @Microsoft Why do I pay for WORD when it funct...  \n","3    CSGO matchmaking is so full of closet hacking,...  \n","4    Now the President is slapping Americans in the...  \n","5    Hi @EAHelp I’ve had Madeleine McCann in my cel...  \n","..                                                 ...  \n","993  Please explain how this is possible! How can t...  \n","994  Good on Sony. As much as I want to see the new...  \n","997  Today sucked so it’s time to drink wine n play...  \n","998  Bought a fraction of Microsoft today. Small wins.  \n","999  Johnson & Johnson to stop selling talc baby po...  \n","\n","[828 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-24ef0a18-5021-4ad3-9f0d-6a47002c281f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>location</th>\n","      <th>target</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>352</td>\n","      <td>Amazon</td>\n","      <td>Neutral</td>\n","      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8312</td>\n","      <td>Microsoft</td>\n","      <td>Negative</td>\n","      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4371</td>\n","      <td>CS-GO</td>\n","      <td>Negative</td>\n","      <td>CSGO matchmaking is so full of closet hacking,...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4433</td>\n","      <td>Google</td>\n","      <td>Neutral</td>\n","      <td>Now the President is slapping Americans in the...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6273</td>\n","      <td>FIFA</td>\n","      <td>Negative</td>\n","      <td>Hi @EAHelp I’ve had Madeleine McCann in my cel...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>993</th>\n","      <td>314</td>\n","      <td>Amazon</td>\n","      <td>Negative</td>\n","      <td>Please explain how this is possible! How can t...</td>\n","    </tr>\n","    <tr>\n","      <th>994</th>\n","      <td>9701</td>\n","      <td>PlayStation5(PS5)</td>\n","      <td>Positive</td>\n","      <td>Good on Sony. As much as I want to see the new...</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2652</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>Today sucked so it’s time to drink wine n play...</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>8069</td>\n","      <td>Microsoft</td>\n","      <td>Positive</td>\n","      <td>Bought a fraction of Microsoft today. Small wins.</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>6960</td>\n","      <td>johnson&amp;johnson</td>\n","      <td>Neutral</td>\n","      <td>Johnson &amp; Johnson to stop selling talc baby po...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>828 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24ef0a18-5021-4ad3-9f0d-6a47002c281f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24ef0a18-5021-4ad3-9f0d-6a47002c281f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24ef0a18-5021-4ad3-9f0d-6a47002c281f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9c03cf08-97d7-43d3-b8f2-f574378986d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c03cf08-97d7-43d3-b8f2-f574378986d6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9c03cf08-97d7-43d3-b8f2-f574378986d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b8cf79f7-c07d-44b7-84d6-a517d3149a6f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b8cf79f7-c07d-44b7-84d6-a517d3149a6f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 828,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3722,\n        \"min\": 6,\n        \"max\": 13197,\n        \"num_unique_values\": 828,\n        \"samples\": [\n          9769,\n          11976,\n          5074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"LeagueOfLegends\",\n          \"Hearthstone\",\n          \"PlayerUnknownsBattlegrounds(PUBG)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 827,\n        \"samples\": [\n          \"@GhostRecon so far playing the new update, the stamina is pointless even on extreme if you have upgraded it and have a ration never runs out, losing bullets on reload is pointless when you have like 300/400 rounds, Sam fisher missions are buggy as hell, good thing no gear level\",\n          \"I wanna do this shit\",\n          \"Quick 4k, \\n#rainbowsixsiege #rainbowsix #ranked #tomclancy #streamer #stream #mixerfamily #mixerlove #mixer #mixerstreamer #mixerstreamersunite #mixerstream \\n\\nmixer.com/kn_blunt instagram.com/p/B8xYQEHnNBA/\\u2026\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.reset_index(drop=True,inplace=True) #droping the old index and assigning new index to that row\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":493},"id":"RYTos-jRqKEg","executionInfo":{"status":"ok","timestamp":1717393711093,"user_tz":-330,"elapsed":33,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"8430b8ef-8d1e-4c8d-db3a-203f2d6f8a66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ID           location    target  \\\n","0     352             Amazon   Neutral   \n","1    8312          Microsoft  Negative   \n","2    4371              CS-GO  Negative   \n","3    4433             Google   Neutral   \n","4    6273               FIFA  Negative   \n","..    ...                ...       ...   \n","823   314             Amazon  Negative   \n","824  9701  PlayStation5(PS5)  Positive   \n","825  2652        Borderlands  Positive   \n","826  8069          Microsoft  Positive   \n","827  6960    johnson&johnson   Neutral   \n","\n","                                                  text  \n","0    BBC News - Amazon boss Jeff Bezos rejects clai...  \n","1    @Microsoft Why do I pay for WORD when it funct...  \n","2    CSGO matchmaking is so full of closet hacking,...  \n","3    Now the President is slapping Americans in the...  \n","4    Hi @EAHelp I’ve had Madeleine McCann in my cel...  \n","..                                                 ...  \n","823  Please explain how this is possible! How can t...  \n","824  Good on Sony. As much as I want to see the new...  \n","825  Today sucked so it’s time to drink wine n play...  \n","826  Bought a fraction of Microsoft today. Small wins.  \n","827  Johnson & Johnson to stop selling talc baby po...  \n","\n","[828 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-f10a47fe-05fe-47fd-8fe4-79f95a8439ec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>location</th>\n","      <th>target</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>352</td>\n","      <td>Amazon</td>\n","      <td>Neutral</td>\n","      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>8312</td>\n","      <td>Microsoft</td>\n","      <td>Negative</td>\n","      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4371</td>\n","      <td>CS-GO</td>\n","      <td>Negative</td>\n","      <td>CSGO matchmaking is so full of closet hacking,...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4433</td>\n","      <td>Google</td>\n","      <td>Neutral</td>\n","      <td>Now the President is slapping Americans in the...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6273</td>\n","      <td>FIFA</td>\n","      <td>Negative</td>\n","      <td>Hi @EAHelp I’ve had Madeleine McCann in my cel...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>823</th>\n","      <td>314</td>\n","      <td>Amazon</td>\n","      <td>Negative</td>\n","      <td>Please explain how this is possible! How can t...</td>\n","    </tr>\n","    <tr>\n","      <th>824</th>\n","      <td>9701</td>\n","      <td>PlayStation5(PS5)</td>\n","      <td>Positive</td>\n","      <td>Good on Sony. As much as I want to see the new...</td>\n","    </tr>\n","    <tr>\n","      <th>825</th>\n","      <td>2652</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>Today sucked so it’s time to drink wine n play...</td>\n","    </tr>\n","    <tr>\n","      <th>826</th>\n","      <td>8069</td>\n","      <td>Microsoft</td>\n","      <td>Positive</td>\n","      <td>Bought a fraction of Microsoft today. Small wins.</td>\n","    </tr>\n","    <tr>\n","      <th>827</th>\n","      <td>6960</td>\n","      <td>johnson&amp;johnson</td>\n","      <td>Neutral</td>\n","      <td>Johnson &amp; Johnson to stop selling talc baby po...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>828 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f10a47fe-05fe-47fd-8fe4-79f95a8439ec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f10a47fe-05fe-47fd-8fe4-79f95a8439ec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f10a47fe-05fe-47fd-8fe4-79f95a8439ec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b9c55d4d-0a17-4b7d-94e7-035904e73988\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9c55d4d-0a17-4b7d-94e7-035904e73988')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b9c55d4d-0a17-4b7d-94e7-035904e73988 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_213dcccf-ec9c-4b37-83fd-5444f0cf17e6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_213dcccf-ec9c-4b37-83fd-5444f0cf17e6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 828,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3722,\n        \"min\": 6,\n        \"max\": 13197,\n        \"num_unique_values\": 828,\n        \"samples\": [\n          9769,\n          11976,\n          5074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"LeagueOfLegends\",\n          \"Hearthstone\",\n          \"PlayerUnknownsBattlegrounds(PUBG)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 827,\n        \"samples\": [\n          \"@GhostRecon so far playing the new update, the stamina is pointless even on extreme if you have upgraded it and have a ration never runs out, losing bullets on reload is pointless when you have like 300/400 rounds, Sam fisher missions are buggy as hell, good thing no gear level\",\n          \"I wanna do this shit\",\n          \"Quick 4k, \\n#rainbowsixsiege #rainbowsix #ranked #tomclancy #streamer #stream #mixerfamily #mixerlove #mixer #mixerstreamer #mixerstreamersunite #mixerstream \\n\\nmixer.com/kn_blunt instagram.com/p/B8xYQEHnNBA/\\u2026\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.drop([\"ID\",\"location\"],axis =1,inplace=True)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"HnN6cBmoq39N","executionInfo":{"status":"ok","timestamp":1717393711093,"user_tz":-330,"elapsed":32,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"95cf6092-1670-4349-e541-80aeffeeae99"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       target                                               text\n","0     Neutral  BBC News - Amazon boss Jeff Bezos rejects clai...\n","1    Negative  @Microsoft Why do I pay for WORD when it funct...\n","2    Negative  CSGO matchmaking is so full of closet hacking,...\n","3     Neutral  Now the President is slapping Americans in the...\n","4    Negative  Hi @EAHelp I’ve had Madeleine McCann in my cel...\n","..        ...                                                ...\n","823  Negative  Please explain how this is possible! How can t...\n","824  Positive  Good on Sony. As much as I want to see the new...\n","825  Positive  Today sucked so it’s time to drink wine n play...\n","826  Positive  Bought a fraction of Microsoft today. Small wins.\n","827   Neutral  Johnson & Johnson to stop selling talc baby po...\n","\n","[828 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-6f2bc522-bfcf-4faa-af79-e70302ae71df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Neutral</td>\n","      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Negative</td>\n","      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Negative</td>\n","      <td>CSGO matchmaking is so full of closet hacking,...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Neutral</td>\n","      <td>Now the President is slapping Americans in the...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Negative</td>\n","      <td>Hi @EAHelp I’ve had Madeleine McCann in my cel...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>823</th>\n","      <td>Negative</td>\n","      <td>Please explain how this is possible! How can t...</td>\n","    </tr>\n","    <tr>\n","      <th>824</th>\n","      <td>Positive</td>\n","      <td>Good on Sony. As much as I want to see the new...</td>\n","    </tr>\n","    <tr>\n","      <th>825</th>\n","      <td>Positive</td>\n","      <td>Today sucked so it’s time to drink wine n play...</td>\n","    </tr>\n","    <tr>\n","      <th>826</th>\n","      <td>Positive</td>\n","      <td>Bought a fraction of Microsoft today. Small wins.</td>\n","    </tr>\n","    <tr>\n","      <th>827</th>\n","      <td>Neutral</td>\n","      <td>Johnson &amp; Johnson to stop selling talc baby po...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>828 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f2bc522-bfcf-4faa-af79-e70302ae71df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f2bc522-bfcf-4faa-af79-e70302ae71df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f2bc522-bfcf-4faa-af79-e70302ae71df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08b921f8-2fe2-402f-9d4b-0e251cd18ced\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08b921f8-2fe2-402f-9d4b-0e251cd18ced')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08b921f8-2fe2-402f-9d4b-0e251cd18ced button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_39e7be40-5fea-45c1-9378-c9a19aaaf177\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_39e7be40-5fea-45c1-9378-c9a19aaaf177 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 828,\n  \"fields\": [\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Neutral\",\n          \"Negative\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 827,\n        \"samples\": [\n          \"@GhostRecon so far playing the new update, the stamina is pointless even on extreme if you have upgraded it and have a ration never runs out, losing bullets on reload is pointless when you have like 300/400 rounds, Sam fisher missions are buggy as hell, good thing no gear level\",\n          \"I wanna do this shit\",\n          \"Quick 4k, \\n#rainbowsixsiege #rainbowsix #ranked #tomclancy #streamer #stream #mixerfamily #mixerlove #mixer #mixerstreamer #mixerstreamersunite #mixerstream \\n\\nmixer.com/kn_blunt instagram.com/p/B8xYQEHnNBA/\\u2026\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df[\"target\"]=df[\"target\"].map({\"Positive\":1,\"Negative\":-1,\"Neutral\":0})\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"G67PjOyjrVpW","executionInfo":{"status":"ok","timestamp":1717393711093,"user_tz":-330,"elapsed":31,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"2af8c0ae-b5d5-4234-b494-3493d0236bc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     target                                               text\n","0         0  BBC News - Amazon boss Jeff Bezos rejects clai...\n","1        -1  @Microsoft Why do I pay for WORD when it funct...\n","2        -1  CSGO matchmaking is so full of closet hacking,...\n","3         0  Now the President is slapping Americans in the...\n","4        -1  Hi @EAHelp I’ve had Madeleine McCann in my cel...\n","..      ...                                                ...\n","823      -1  Please explain how this is possible! How can t...\n","824       1  Good on Sony. As much as I want to see the new...\n","825       1  Today sucked so it’s time to drink wine n play...\n","826       1  Bought a fraction of Microsoft today. Small wins.\n","827       0  Johnson & Johnson to stop selling talc baby po...\n","\n","[828 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b9fa01c2-af71-4907-8fae-b5857232cb14\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>BBC News - Amazon boss Jeff Bezos rejects clai...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1</td>\n","      <td>@Microsoft Why do I pay for WORD when it funct...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1</td>\n","      <td>CSGO matchmaking is so full of closet hacking,...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>Now the President is slapping Americans in the...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-1</td>\n","      <td>Hi @EAHelp I’ve had Madeleine McCann in my cel...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>823</th>\n","      <td>-1</td>\n","      <td>Please explain how this is possible! How can t...</td>\n","    </tr>\n","    <tr>\n","      <th>824</th>\n","      <td>1</td>\n","      <td>Good on Sony. As much as I want to see the new...</td>\n","    </tr>\n","    <tr>\n","      <th>825</th>\n","      <td>1</td>\n","      <td>Today sucked so it’s time to drink wine n play...</td>\n","    </tr>\n","    <tr>\n","      <th>826</th>\n","      <td>1</td>\n","      <td>Bought a fraction of Microsoft today. Small wins.</td>\n","    </tr>\n","    <tr>\n","      <th>827</th>\n","      <td>0</td>\n","      <td>Johnson &amp; Johnson to stop selling talc baby po...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>828 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9fa01c2-af71-4907-8fae-b5857232cb14')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b9fa01c2-af71-4907-8fae-b5857232cb14 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b9fa01c2-af71-4907-8fae-b5857232cb14');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-851130da-1e78-40b2-8e37-f913dc4e9cee\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-851130da-1e78-40b2-8e37-f913dc4e9cee')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-851130da-1e78-40b2-8e37-f913dc4e9cee button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_664d4efb-ff04-4ffa-a0d9-c1777af5ec10\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_664d4efb-ff04-4ffa-a0d9-c1777af5ec10 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 828,\n  \"fields\": [\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": -1,\n        \"max\": 1,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          -1,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 827,\n        \"samples\": [\n          \"@GhostRecon so far playing the new update, the stamina is pointless even on extreme if you have upgraded it and have a ration never runs out, losing bullets on reload is pointless when you have like 300/400 rounds, Sam fisher missions are buggy as hell, good thing no gear level\",\n          \"I wanna do this shit\",\n          \"Quick 4k, \\n#rainbowsixsiege #rainbowsix #ranked #tomclancy #streamer #stream #mixerfamily #mixerlove #mixer #mixerstreamer #mixerstreamersunite #mixerstream \\n\\nmixer.com/kn_blunt instagram.com/p/B8xYQEHnNBA/\\u2026\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["tweets=df.text\n","tweets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8uTR3XdzsyCc","executionInfo":{"status":"ok","timestamp":1717393711093,"user_tz":-330,"elapsed":30,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"448beee6-a86c-4137-fcf2-803efb5a08c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      BBC News - Amazon boss Jeff Bezos rejects clai...\n","1      @Microsoft Why do I pay for WORD when it funct...\n","2      CSGO matchmaking is so full of closet hacking,...\n","3      Now the President is slapping Americans in the...\n","4      Hi @EAHelp I’ve had Madeleine McCann in my cel...\n","                             ...                        \n","823    Please explain how this is possible! How can t...\n","824    Good on Sony. As much as I want to see the new...\n","825    Today sucked so it’s time to drink wine n play...\n","826    Bought a fraction of Microsoft today. Small wins.\n","827    Johnson & Johnson to stop selling talc baby po...\n","Name: text, Length: 828, dtype: object"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["tweets = tweets.str.replace(\"[^a-zA-Z0-9]\",\" \",regex = True)\n","tweets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h7RBMIIQtjaq","executionInfo":{"status":"ok","timestamp":1717393992901,"user_tz":-330,"elapsed":508,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"8f4edc36-8a7e-4cd0-c1d4-c1dc9a98b212"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      bbc news   amazon boss jeff bezo reject claim ...\n","1       microsoft whi pay word function poor  samsung...\n","2       csgo matchmak full closet hack   truli aw game  \n","3      presid slap american face realli commit unlaw ...\n","4      hi  eahelp   madelein mccann cellar past 13 ye...\n","                             ...                        \n","823    pleas explain possibl   let compani overcharg ...\n","824    good soni   much want see new ps5   go right m...\n","825    today suck   time drink wine n play borderland...\n","826        bought fraction microsoft today   small win  \n","827    johnson   johnson stop sell talc babi powder u...\n","Name: text, Length: 828, dtype: object"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["from nltk.stem import SnowballStemmer\n","from nltk import TweetTokenizer\n","\n","stemmer =SnowballStemmer(\"english\")\n","tk =TweetTokenizer()"],"metadata":{"id":"rYsfFtwkucFQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tweets =tweets.apply(lambda x:[stemmer.stem(i.lower())for i in tk.tokenize(x)]).apply(lambda y:\" \".join(y))"],"metadata":{"id":"1vqU2ZtAwVfW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tweets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hPYtkHR1w15Q","executionInfo":{"status":"ok","timestamp":1717393998587,"user_tz":-330,"elapsed":3,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"dff91955-bd51-4318-e630-9f7cdde25f7f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      bbc news amazon boss jeff bezo reject claim co...\n","1      microsoft whi pay word function poor samsungus...\n","2           csgo matchmak full closet hack truli aw game\n","3      presid slap american face realli commit unlaw ...\n","4      hi eahelp madelein mccann cellar past 13 year ...\n","                             ...                        \n","823    plea explain possibl let compani overcharg sca...\n","824    good soni much want see new ps5 go right much ...\n","825    today suck time drink wine n play borderland s...\n","826            bought fraction microsoft today small win\n","827    johnson johnson stop sell talc babi powder u c...\n","Name: text, Length: 828, dtype: object"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["from nltk.corpus import stopwords\n","import nltk\n","nltk.download(\"stopwords\")\n","sw = set(stopwords.words(\"english\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wLYXGmbPw3o8","executionInfo":{"status":"ok","timestamp":1717393999045,"user_tz":-330,"elapsed":3,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"0377cc5e-e6a9-4e80-bda4-b4434ed8b6eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]}]},{"cell_type":"code","source":["tweets = tweets.apply(lambda  x:[i for i in tk.tokenize(x)if i not in sw]).apply(lambda x:\" \".join(x))"],"metadata":{"id":"Q9wu73nXymaR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tweets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"piBKHj0_zD2w","executionInfo":{"status":"ok","timestamp":1717394001073,"user_tz":-330,"elapsed":3,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"07f96338-8e48-4575-d05c-f8a25fb53905"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      bbc news amazon boss jeff bezo reject claim co...\n","1      microsoft whi pay word function poor samsungus...\n","2           csgo matchmak full closet hack truli aw game\n","3      presid slap american face realli commit unlaw ...\n","4      hi eahelp madelein mccann cellar past 13 year ...\n","                             ...                        \n","823    plea explain possibl let compani overcharg sca...\n","824    good soni much want see new ps5 go right much ...\n","825    today suck time drink wine n play borderland s...\n","826            bought fraction microsoft today small win\n","827    johnson johnson stop sell talc babi powder u c...\n","Name: text, Length: 828, dtype: object"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","vectorizer = TfidfVectorizer()\n","train_vec = vectorizer.fit_transform(tweets)\n","print(train_vec)"],"metadata":{"id":"5Vms4ceEz0zg","executionInfo":{"status":"ok","timestamp":1717394488698,"user_tz":-330,"elapsed":500,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ba890e40-612f-47e3-a1f2-2f3e4b43fd2d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  (0, 735)\t0.2456282916977699\n","  (0, 520)\t0.2456282916977699\n","  (0, 3600)\t0.19717097284763976\n","  (0, 879)\t0.11802111433875656\n","  (0, 1055)\t0.2456282916977699\n","  (0, 1185)\t0.22139963227270484\n","  (0, 2090)\t0.12503547156807654\n","  (0, 341)\t0.2135997461023189\n","  (0, 908)\t0.16343698819954885\n","  (0, 853)\t0.2018385048310212\n","  (0, 2878)\t0.2456282916977699\n","  (0, 608)\t0.2456282916977699\n","  (0, 1917)\t0.23145543449136263\n","  (0, 675)\t0.2135997461023189\n","  (0, 411)\t0.14270670271218175\n","  (0, 2391)\t0.365996231282465\n","  (0, 577)\t0.46291086898272527\n","  (1, 843)\t0.4055823664694651\n","  (1, 3014)\t0.4055823664694651\n","  (1, 2670)\t0.3821800909185634\n","  (1, 1470)\t0.4055823664694651\n","  (1, 3820)\t0.36557591217188057\n","  (1, 2572)\t0.3126902562590763\n","  (1, 3778)\t0.26216072802580975\n","  (1, 2253)\t0.24555654927912696\n","  :\t:\n","  (825, 673)\t0.22981061112100945\n","  (825, 1048)\t0.2315686698425631\n","  (825, 3504)\t0.21750175079084832\n","  (825, 3353)\t0.2904718522758868\n","  (825, 2638)\t0.17148706662740873\n","  (826, 1445)\t0.5079831062080814\n","  (826, 3195)\t0.47867226429410115\n","  (826, 678)\t0.4174215841659411\n","  (826, 3789)\t0.353278941165688\n","  (826, 3514)\t0.34523850330234374\n","  (826, 2253)\t0.3075542453642147\n","  (827, 222)\t0.3085327836746446\n","  (827, 1187)\t0.3085327836746446\n","  (827, 2925)\t0.3085327836746446\n","  (827, 166)\t0.3085327836746446\n","  (827, 2328)\t0.3085327836746446\n","  (827, 756)\t0.2602967814546125\n","  (827, 3070)\t0.24766572568673034\n","  (827, 3401)\t0.24766572568673034\n","  (827, 3320)\t0.21723219669277322\n","  (827, 1766)\t0.14999073362910845\n","  (827, 2688)\t0.23368360020019152\n","  (827, 543)\t0.22309506625787626\n","  (827, 1939)\t0.37089519596031884\n","  (827, 879)\t0.14824588278342318\n"]}]},{"cell_type":"code","source":["train_vec.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hrejgpDcsDbN","executionInfo":{"status":"ok","timestamp":1717394603868,"user_tz":-330,"elapsed":470,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"8a34c394-742a-46eb-d2fb-dfb9557fb217"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(828, 3929)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["x= train_vec\n","y =df[\"target\"].values"],"metadata":{"id":"vCkIxcQ8scMy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,test_size = 0.30,random_state=0)"],"metadata":{"id":"ozkVvj6Ys7wY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#model building"],"metadata":{"id":"FN9Rf5f-vInT"}},{"cell_type":"code","source":["from sklearn.svm import SVC\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier\n","svm_model = SVC()\n","nm_model = MultinomialNB()\n","rf_model =RandomForestClassifier()\n","ab_model = AdaBoostClassifier()\n","list_model = [svm_model,nm_model,rf_model,ab_model]"],"metadata":{"id":"54rcBFlHtYKZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report,ConfusionMatrixDisplay"],"metadata":{"id":"mepyxsqDv4Yn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.svm import SVC\n","from sklearn.metrics import classification_report,ConfusionMatrixDisplay"],"metadata":{"id":"i-nFgbTyv4A-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6AEjU11VxID-","executionInfo":{"status":"ok","timestamp":1717395851058,"user_tz":-330,"elapsed":436,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"ea564567-feea-4b9b-a02d-247e49f3d641"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(579,)\n","(249,)\n"]}]},{"cell_type":"code","source":["for i in list_model:\n","  print(i)\n","  i.fit(x_train,y_train)\n","  y_predict = i.predict(x_test)\n","  print(\"*\"*100)\n","\n","  print(classification_report(y_test,y_predict))\n","\n","  print(\"*\"*100)\n","  print(ConfusionMatrixDisplay.from_predictions(y_test,y_predict))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"PD9rpFbtxQEG","executionInfo":{"status":"ok","timestamp":1717396146865,"user_tz":-330,"elapsed":6257,"user":{"displayName":"naimu samad","userId":"06085924539137588202"}},"outputId":"879044a3-5552-47fe-91b4-e4b1f96d1a1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["SVC()\n","****************************************************************************************************\n","              precision    recall  f1-score   support\n","\n","          -1       0.59      0.53      0.56        75\n","           0       0.51      0.70      0.59        84\n","           1       0.68      0.49      0.57        90\n","\n","    accuracy                           0.57       249\n","   macro avg       0.59      0.57      0.57       249\n","weighted avg       0.59      0.57      0.57       249\n","\n","****************************************************************************************************\n","<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7992663e4310>\n","MultinomialNB()\n","****************************************************************************************************\n","              precision    recall  f1-score   support\n","\n","          -1       0.55      0.63      0.59        75\n","           0       0.58      0.55      0.56        84\n","           1       0.60      0.57      0.58        90\n","\n","    accuracy                           0.58       249\n","   macro avg       0.58      0.58      0.58       249\n","weighted avg       0.58      0.58      0.58       249\n","\n","****************************************************************************************************\n","<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7992663e4280>\n","RandomForestClassifier()\n","****************************************************************************************************\n","              precision    recall  f1-score   support\n","\n","          -1       0.56      0.49      0.52        75\n","           0       0.62      0.65      0.64        84\n","           1       0.58      0.61      0.59        90\n","\n","    accuracy                           0.59       249\n","   macro avg       0.59      0.59      0.59       249\n","weighted avg       0.59      0.59      0.59       249\n","\n","****************************************************************************************************\n","<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x799265bf24d0>\n","AdaBoostClassifier()\n","****************************************************************************************************\n","              precision    recall  f1-score   support\n","\n","          -1       0.47      0.32      0.38        75\n","           0       0.44      0.71      0.55        84\n","           1       0.63      0.43      0.51        90\n","\n","    accuracy                           0.49       249\n","   macro avg       0.51      0.49      0.48       249\n","weighted avg       0.52      0.49      0.48       249\n","\n","****************************************************************************************************\n","<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x799265bf24d0>\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"yq1W7jF7x738"},"execution_count":null,"outputs":[]}]}